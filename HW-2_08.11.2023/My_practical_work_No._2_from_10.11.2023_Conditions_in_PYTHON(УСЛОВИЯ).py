# Дата ПЯТНИЦА 10 ноября 2023 год.
# Урок №3.

# Практическая работа - №2. Условия в PYTHON.
# Условия: if, else, elif. Блоки, отступы.

# Задание №1.

# Дано:

# Из передачи “Здоровье” Аня узнала, что рекомендуется спать хотя бы A часов в сутки, но пересыпать
# тоже вредно и не стоит спать более B часов. Сейчас Аня спит H часов в сутки. Если режим сна Ани
# удовлетворяет рекомендациям передачи “Здоровье”, выведите “Это нормально”. Если Аня спит
# менее A часов, выведите “Недосып”, если же более B часов, то выведите “Пересып”. Получаемое число A
# всегда меньше либо равно B. На вход программе в три строки подаются переменные в следующем порядке:
# A, B, H. Обратите внимание на регистр символов: вывод должен в точности соответствовать описанному
# в задании, т. е. если программа должна вывести "Пересып", выводы программы "пересып", "ПЕРЕСЫП", "ПеРеСыП"
# и другие не будут считаться верными. Это первое не самое тривиальное задание на условное выражение.
# В случаях, когда разбить исполнение программы на несколько направлений, стоит внимательно обдумать все
# условия, которые нужно использовать. Особое внимание стоит уделить строгости используемых условных
# операторов. Для того, чтобы понимать, какой из них стоит использовать, внимательно прочитайте
# условие задания.

# Решение:

# Ввод переменных
A = int(input())
B = int(input())
H = int(input())

# Проверка режима сна Ани
if H < A:
    print("Недосып")
elif H > B:
    print("Пересып")
else:
    print("Это нормально")



# Задание №2.

# Дано:

# Требуется определить, является ли данный год високосным. Напомним, что
# високосными годами считаются те годы, порядковый номер которых
# либо кратен 4, но при этом не кратен 100, либо кратен 400 (например,
# 2000-й год являлся високосным, а 2100-й будет не високосным годом).
# Программа должна корректно работать на числах 1900≤n≤3000. Выведите "Високосный"
# в случае, если считанный год является високосным и "Обычный" в обратном случае
# (не забывайте проверять регистр выводимых программой символов).

# Решение:

# Ввод года
year = int(input())

# Проверка, является ли год високосным
if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
    print("Високосный")
else:
    print("Обычный")


# Задание №3.

# Дано:

# Напишите программу, принимающую на вход целое число, которая выводит True,
# если переданное значение попадает в интервал (- 15,12]∪(14,17)∪[19,+∞)
# и False в противном случае (регистр символов имеет значение).

# Обратите внимание на разные скобки, используемые для обозначения
# интервалов. В задании используются полуоткрытые и открытые интервалы.

# Решение:

# Ввод числа
number = int(input())

# Проверка условия
if (-15 < number <= 12) or (14 < number < 17) or (number >= 19):
    print("True")
else:
    print("False")


# Задание №4.

# Дано:

# Жители страны Малевии часто экспериментируют с планировкой комнат.
# Комнаты бывают треугольные, прямоугольные и круглые.
# Чтобы быстро вычислять жилплощадь, требуется написать программу, на вход
# которой подаётся тип фигуры комнаты и соответствующие параметры, которая
# бы выводила площадь получившейся комнаты.

# Для числа π в стране Малевии используют значение 3.14.

# Решение:

import math

# Ввод типа фигуры
shape = input()

# Вычисление площади в зависимости от типа фигуры
if shape == "треугольник":
    a = float(input())
    b = float(input())
    c = float(input())
    # Полупериметр треугольника
    s = (a + b + c) / 2
    # Формула Герона для площади треугольника
    area = math.sqrt(s * (s - a) * (s - b) * (s - c))
elif shape == "прямоугольник":
    a = float(input())
    b = float(input())
    # Площадь прямоугольника
    area = a * b
elif shape == "круг":
    r = float(input())
    # Площадь круга
    area = 3.14 * r * r
else:
    # В случае некорректного ввода типа фигуры
    print("Некорректный ввод")
    area = None

# Вывод результата, если ввод был корректным
if area is not None:
    print(round(area, 1))



# Задание №5.

# Дано:

# Для того чтобы это звучало правильно, для каждого n нужно
# использовать верное окончание слова. Напишите программу, считывающую с
# пользовательского ввода целое число n (неотрицательное), выводящее это
# число в консоль вместе с правильным образом изменённым словом «программист»,
# для того чтобы робот мог нормально общаться с людьми, например, 1 программист,
# 2 программиста, 5 программистов.

# В комнате может быть очень много программистов.

# Проверьте, что ваша программа правильно обработает все случаи, как минимум до
# 1000 человек. Если ваше решение не проходит какой-то тест, это значит,
# что вы не рассмотрели какой-то из случаев входных данных (число программистов
# 10000≤n≤1000). Обязательно проверяйте свои решения на дополнительных значениях,
# а не только на тех, что приведены в условии задания.

# Решение:

n = int(input())

if n % 10 == 1 and n % 100 != 11:
    print(n, "программист")
elif 2 <= n % 10 <= 4 and (n % 100 < 10 or n % 100 >= 20):
    print(n, "программиста")
else:
    print(n, "программистов")


